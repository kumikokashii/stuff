================================================
React Crash Course
https://www.youtube.com/watch?v=Ke90Tje7VS0
================================================

DOM = Document Object Model
- DOM elements are window, document, table, etc.

React is a View library, not a framework like Angular. It reacts to state change, to update DOM, without directly updating DOM. Each component is a class with state and render method.

------------------------------------------------
Setup
------------------------------------------------

Install Node.js: brew install
Install React: sudo npm i -g create-react-app@1.5.2

Visual Studio Code w/ extentions
- Simple React Snippets
- Prettier, code reformatter

When I deleted local apps and cloned the Gihub repo, it didn't work until in each app dir, "npm install" was run.

------------------------------------------------
First App
------------------------------------------------

Create a new app: create-react-app app-name (app-name can be anything)

Compile and open it up in browser: npm start (from the new directory). go to localhost:3000 to see it

Each component's render method returns JSX
- JSX = JavaScriptXML, looks like <h1>Hello<h1>
- Babel compiles JSX via React. It does "React.createElement(...)"

------------------------------------------------
More
------------------------------------------------

Bootstrap:
- "Bootstrap is a free and open-source CSS framework directed at responsive, mobile-first front-end web development. It contains CSS- and (optionally) JavaScript-based design templates for typography, forms, buttons, navigation and other interface components."
- Install bootstrap: npm i bootstrap@4.1.1
- Add to index.js: import 'bootstrap/dist/css/bootstrap.css';

In src, create a directory called components. Make a file per component.
- Name componentName.jsx (jsx = JavaScriptXML. instead of just .js). Use camelcase
- Import that class in index.js: import Counter from './components/counter';
- Use it as <Counter />

React.Fragment is when you don't wrap 2+ elements in <div></div>.

For a component, sdynamic text:
state = {
  count: 0,
  address: {
    street: xyz
  }
}
... and use it like: <span>{this.state.count}</span>,
... or formatCount() {
	   return this.state.count === 0 ? 'Zero' : this.state.count;
       }



